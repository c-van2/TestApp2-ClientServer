@page "/teamcpd"
@using TestApp2.Shared
@inject HttpClient Http
@using MudBlazor

<PageTitle>Team CPD</PageTitle>

@if (iaCpdRecords == null || mpfaCpdRecords == null)
{
    <MudProgressLinear Indeterminate Color="Color.Primary" />
}
else
{
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
        <!-- IA CPD Records -->
        <MudTabPanel Text="IA CPD Outstanding">
            <MudText Typo="Typo.h6" Class="mb-2">Your Team IA CPD Record (Assessment Period 1 Aug 2024 - 31 Jul 2025)
            </MudText>
            <MudText Typo="Typo.body1" Class="mb-4">List of Outstanding CPD (Deadline Outstanding 30 Jun 2025)</MudText>

            <MudProgressCircular Color="Color.Success" Rounded="true" Size="Size.Large" StrokeWidth="4" Value="@iaCpdPercentage" />

            <MudText>@iaCpdPercentage</MudText>
            <MudText>@TargetPeople</MudText>


            <MudTable Items="@iaCpdRecords" Hover="true" Dense="true" Breakpoint="Breakpoint.None">
                <HeaderContent>
                    <MudTh>Name</MudTh>
                    <MudTh>Full Name</MudTh>
                    <MudTh>Total Hours</MudTh>
                    <MudTh>Compulsory</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Name">@context.Name</MudTd>
                    <MudTd DataLabel="Full Name">@context.FullName</MudTd>
                    <MudTd DataLabel="Total Hours">@context.TotalHours</MudTd>
                    <MudTd DataLabel="Compulsory">@context.Compulsory</MudTd>
                </RowTemplate>
            </MudTable>
        </MudTabPanel>

        <!-- MPFA CPD Records -->
        <MudTabPanel Text="MPFA CPD Outstanding">
            <MudText Typo="Typo.h6" Class="mb-2">Your Team MPFA CPD Record (Assessment Period 1 Jan 2025 - 31 Dec 2025)
            </MudText>
            <MudText Typo="Typo.body1" Class="mb-4">List of Outstanding CPD (Deadline Outstanding 30 Nov 2025)</MudText>
            
            <MudProgressCircular Color="Color.Success" Rounded="true" Size="Size.Large" StrokeWidth="4" Value="@mpfaCpdPercentage" />
            <MudText>@mpfaCpdPercentage</MudText>

            <MudTable Items="@mpfaCpdRecords" Hover="true" Dense="true" Breakpoint="Breakpoint.None">
                <HeaderContent>
                    <MudTh>Name</MudTh>
                    <MudTh>Full Name</MudTh>
                    <MudTh>Total Hours (including Core)</MudTh>
                    <MudTh>Core</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Name">@context.Name</MudTd>
                    <MudTd DataLabel="Full Name">@context.FullName</MudTd>
                    <MudTd DataLabel="Total Hours">@context.TotalHours.ToString("0.0")</MudTd>
                    <MudTd DataLabel="Core">@context.Core.ToString("0.0")</MudTd>
                </RowTemplate>
            </MudTable>
        </MudTabPanel>
    </MudTabs>
}




@code {
    private bool _loading = false;
    private int TargetPeople = 5;
    private double mpfaCpdPercentage => TargetPeople == 0 ? 0 : ((mpfaCpdRecords?.Count() ?? 0) / (double)TargetPeople) *
    100;
    private double iaCpdPercentage => TargetPeople == 0 ? 0 : ((iaCpdRecords?.Count() ?? 0) / (double)TargetPeople) * 100;

    private IaCpdRecord[]? iaCpdRecords;
    private MpfaCpdRecord[]? mpfaCpdRecords;

    protected override async Task OnInitializedAsync()
    {
        iaCpdRecords = await Http.GetFromJsonAsync<IaCpdRecord[]>("TeamCPD/IAcpd");
        mpfaCpdRecords = await Http.GetFromJsonAsync<MpfaCpdRecord[]>("TeamCPD/MPFAcpd");
    }
}